


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Valvano, solution
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/17/2021
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE2 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE2 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000                 IMPORT           TExaS_Init
   46 00000000                 THUMB
   47 00000000                 AREA             DATA, ALIGN=2
   48 00000000         ;global variables go here
   49 00000000         
   50 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   51 00000000                 THUMB
   52 00000000         
   53 00000000                 EXPORT           Start
   54 00000000         
   55 00000000         Start
   56 00000000         ; TExaS_Init sets bus clock at 80 MHz
   57 00000000 F7FF FFFE       BL               TExaS_Init
   58 00000004         ; voltmeter, scope on PD3
   59 00000004         ;*******************************************************
                       ***************************************************** 
   60 00000004         ; Initialization 
   61 00000004         
   62 00000004         ; Turn on the clock
   63 00000004 4881            LDR              R0, =SYSCTL_RCGCGPIO_R
   64 00000006 6801            LDR              R1, [R0]
   65 00000008 F041 0130       ORR              R1, #0x30
   66 0000000C 6001            STR              R1, [R0]
   67 0000000E         
   68 0000000E         ; Wait for clock to initialize
   69 0000000E BF00            NOP
   70 00000010 BF00            NOP
   71 00000012         



ARM Macro Assembler    Page 3 


   72 00000012         ;Define inputs and outputs (DIR)
   73 00000012 487F            LDR              R0, =GPIO_PORTE_DIR_R
   74 00000014 7801            LDRB             R1, [R0]
   75 00000016 F001 0102       AND              R1, #0x02   ; Make PE1 as input
                                                            
   76 0000001A F041 0104       ORR              R1, #0x04   ; Make PE2 as outpu
                                                            t
   77 0000001E 7001            STRB             R1, [R0]
   78 00000020         
   79 00000020 487C            LDR              R0, =GPIO_PORTF_DIR_R
   80 00000022 7801            LDRB             R1, [R0]
   81 00000024 F001 0110       AND              R1, #0x10   ;PREV: BIC R1, #0x1
                                                            0    ; Make PE4 as 
                                                            input
   82 00000028 7001            STRB             R1, [R0]
   83 0000002A         
   84 0000002A         ; Digitally enable pins (DEN)
   85 0000002A 487B            LDR              R0, =GPIO_PORTE_DEN_R ; Enable 
                                                            pins PE1 and PE2
   86 0000002C 7801            LDRB             R1, [R0]
   87 0000002E F041 0106       ORR              R1, #0x06
   88 00000032 7001            STRB             R1, [R0]
   89 00000034         
   90 00000034 4879            LDR              R0, =GPIO_PORTF_DEN_R 
                                                            ; Enable PF4 pin
   91 00000036 7801            LDRB             R1, [R0]
   92 00000038 F041 0110       ORR              R1, #0x10
   93 0000003C 7001            STRB             R1, [R0]
   94 0000003E         
   95 0000003E         ; Pull Up Resistor (PUR)- Gives board switch inputs an i
                       nternal pull-up resistor
   96 0000003E 4878            LDR              R0, =GPIO_PORTF_PUR_R
   97 00000040 7801            LDRB             R1, [R0]
   98 00000042 F041 0110       ORR              R1, #0x10
   99 00000046 6001            STR              R1, [R0]
  100 00000048         
  101 00000048 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  102 0000004A         
  103 0000004A         ;*******************************************************
                       ******************************************************  
                        
  104 0000004A         
  105 0000004A F44F 7396       MOV              R3, #300    ; initializes duty 
                                                            cycle to On 30%, Of
                                                            f 70%
  106 0000004E F44F 742F       MOV              R4, #700    ; Note: R3 and R4 a
                                                            re reserved for on/
                                                            off duty cycles, re
                                                            spectively
  107 00000052 F04F 0500       MOV              R5, #0      ; R5 = 1 if button 
                                                            pressed, 0 otherwis
                                                            e
  108 00000056         
  109 00000056         ; This is the main engine which keeps the LED toggling O
                       N and OFF
  110 00000056         
  111 00000056         loop



ARM Macro Assembler    Page 4 


  112 00000056 4622            MOV              R2, R4
  113 00000058 F000 F823 
                       loop1   BL               checkInput  ; checks whether bu
                                                            tton is pressed
  114 0000005C F000 F8D1       BL               delay       ; delay 1 ms
  115 00000060 3A01            SUBS             R2, #1      ; R2 contains the t
                                                            ime (ms) left in OF
                                                            F duty 
  116 00000062 D1F9            BNE              loop1
  117 00000064 F000 F8C3       BL               turnOnLED
  118 00000068         
  119 00000068 461A            MOV              R2, R3
  120 0000006A F000 F81A 
                       loop2   BL               checkInput
  121 0000006E F000 F8C8       BL               delay
  122 00000072 3A01            SUBS             R2, #1      ; R2 contains the t
                                                            ime (ms) left in ON
                                                             duty 
  123 00000074 D1F9            BNE              loop2
  124 00000076 F000 F8BF       BL               turnOffLED
  125 0000007A         
  126 0000007A E7EC            B                loop
  127 0000007C         
  128 0000007C         ********************************************************
*********************************************************
  129 0000007C         ; The program enters this phase if PE2 is pressed, and e
                       xits when it is released
  130 0000007C F04F 0501 
                       Pressed MOV              R5, #1      ; R5 = 1 if pressed
                                                            , 0 otherwise
  131 00000080 F000 F80F 
                       wait2   BL               checkInput  ; check if button i
                                                            s released
  132 00000084 3D00            SUBS             R5, #0
  133 00000086 D1FB            BNE              wait2
  134 00000088 E7FF            B                modDutyCycle ; if button releas
                                                            ed, modify duty cyc
                                                            le
  135 0000008A         
  136 0000008A         
  137 0000008A         modDutyCycle
  138 0000008A F103 03C8       ADD              R3, #200    ; 20% increase for 
                                                            ON duty cycle, vice
                                                             versa for OFF
  139 0000008E 3CC8            SUBS             R4, #200
  140 00000090 F240 404C       MOV              R0, #1100
  141 00000094 4283            CMP              R3, R0      ; is R3 (ON duty cy
                                                            cle) = 550 ms (110%
                                                            )?
  142 00000096 D1DE            BNE              loop        ; if not, skip
  143 00000098 F04F 0364       MOV              R3, #100    ; resets duty cycle
                                                             to 10% ON, 90% OFF
                                                            
  144 0000009C F44F 7461       MOV              R4, #900
  145 000000A0 E7D9            B                loop
  146 000000A2         ********************************************************
***********************************************************
  147 000000A2         
  148 000000A2         ; This subroutine goes to label "Pressed" or "BreathingL



ARM Macro Assembler    Page 5 


                       ED" if a button pressed, otherwise R5 = 0 and return
  149 000000A2 4860    checkInput
                               LDR              R0, =GPIO_PORTF_DATA_R
  150 000000A4 6801            LDR              R1, [R0]
  151 000000A6 F001 0110       AND              R1, #0x10   ; Isolate input PF4
                                                            
  152 000000AA 3900            SUBS             R1, #0      ; If PE4 = 0 (negat
                                                            ive logic), make LE
                                                            D breathe
  153 000000AC B501            PUSH             {LR, R0}
  154 000000AE D00A            BEQ              BreathingLED
  155 000000B0 E8BD 4001       POP              {LR, R0}
  156 000000B4         
  157 000000B4 485C            LDR              R0, =GPIO_PORTE_DATA_R
  158 000000B6 6801            LDR              R1, [R0]
  159 000000B8 F001 0102       AND              R1, #0x2    ; Isolate input PE2
                                                            
  160 000000BC 3900            SUBS             R1, #0      ; If PE2 != 0, butt
                                                            on is pressed
  161 000000BE D1DD            BNE              Pressed
  162 000000C0 F04F 0500       MOV              R5, #0
  163 000000C4 4770            BX               LR
  164 000000C6         
  165 000000C6         ********************************************************
***********************************************************
  166 000000C6         ; This subroutine makes the LED breathe
  167 000000C6         ; R6: Reserved Duty Cycle (RDC) ON
  168 000000C6         ; R7: Reserved Duty Cycle (RDC) OFF
  169 000000C6         ; Breathing function is divided into 4 phases
  170 000000C6         ; Phase 1: Increase Duty cycle from 10% to 90%, incremen
                       ts of  10, .9 second duration, exit condition: R6=90
  171 000000C6         ; Phase 2: Decrease Duty cycle from 90% to 30%, incremen
                       ts of  20, .3 second duration, exit condition: R6=30
  172 000000C6         ; Phase 3: Increase Duty cycle from 30% to 90%, incremen
                       ts of  20, .3 second duration, exit condition: R6=90
  173 000000C6         ; Phase 4: Decrease Duty cycle from 90% to 10%, incremen
                       ts of  10, .7 second duration, exit condition: R6=10
  174 000000C6         ; Each phase follows the same basic template: phase'n', 
                       phase'n.1', and phase'n.2'
  175 000000C6         ; Phase'n'   compares RDC ON to exit condition, incremen
                       ts RDC ON and RDC OFF
  176 000000C6         ; Phase'nA' checks PF4 for button release, executes appr
                       opriate DC OFF duration
  177 000000C6         ; Phase'nB' checks PF4 for button release, executes appr
                       opriate DC ON duration
  178 000000C6         ; For these reasons, only phase1 will be commented in de
                       tail
  179 000000C6         BreathingLED
  180 000000C6 E92D 4400       PUSH             {LR, R10}   ;LR stack save for 
                                                            nested subroutine c
                                                            all
  181 000000CA         
  182 000000CA F04F 0600       MOV              R6, #0      ;clears RDC ON regi
                                                            ster
  183 000000CE F04F 0764       MOV              R7, #100    ;clears RDC OFF reg
                                                            ister
  184 000000D2 E002            B                phase1
  185 000000D4         
  186 000000D4 E8BD 4400 



ARM Macro Assembler    Page 6 


                       terminateBreath
                               POP              {LR, R10}
  187 000000D8 4770            BX               LR
  188 000000DA         
  189 000000DA 2E5A    phase1  CMP              R6, #90     ;compares RDC ON to
                                                             phase1 exit condit
                                                            ion
  190 000000DC D01B            BEQ              phase2      ;phase2 shift if ex
                                                            it condition is met
                                                            
  191 000000DE F106 060A       ADD              R6, R6, #10 ;increments RDC ON 
                                                            by 10
  192 000000E2 3F0A            SUBS             R7, #10     ;increments RDC OFF
                                                             by -10
  193 000000E4 46B1            MOV              R9, R6
  194 000000E6 46B8            MOV              R8, R7
  195 000000E8 F000 F874       BL               checkPF4Input ;calls for button
                                                             status check 
  196 000000EC 2D01            CMP              R5, #1      ;comparison of PF4 
                                                            (negative logic), t
                                                            erminates breathing
                                                             if button was rele
                                                            ased (R5=1)
  197 000000EE D1F1            BNE              terminateBreath
  198 000000F0         
  199 000000F0 F000 F887 
                       phase1A BL               delay       ;executes .5ms dela
                                                            y
  200 000000F4 F1B8 0801       SUBS             R8, #1
  201 000000F8 D2FA            BHS              phase1A
  202 000000FA F000 F878       BL               turnOnLED
  203 000000FE F000 F869       BL               checkPF4Input
  204 00000102 2D01            CMP              R5, #1
  205 00000104 D1E6            BNE              terminateBreath
  206 00000106         
  207 00000106 F000 F87C 
                       phase1B BL               delay
  208 0000010A F1B9 0901       SUBS             R9, #1
  209 0000010E D2FA            BHS              phase1B
  210 00000110 F000 F872       BL               turnOffLED
  211 00000114 E7E1            B                phase1
  212 00000116         
  213 00000116 2E1E    phase2  CMP              R6, #30
  214 00000118 D01B            BEQ              phase3
  215 0000011A 3E14            SUBS             R6, #20
  216 0000011C F107 0714       ADD              R7, R7, #20
  217 00000120 46B1            MOV              R9, R6
  218 00000122 46B8            MOV              R8, R7
  219 00000124 F000 F856       BL               checkPF4Input
  220 00000128 2D01            CMP              R5, #1
  221 0000012A D1D3            BNE              terminateBreath
  222 0000012C         
  223 0000012C F000 F869 
                       phase2A BL               delay
  224 00000130 F1B8 0801       SUBS             R8, #1
  225 00000134 D2FA            BHS              phase2A
  226 00000136 F000 F85A       BL               turnOnLED
  227 0000013A F000 F84B       BL               checkPF4Input
  228 0000013E 2D01            CMP              R5, #1



ARM Macro Assembler    Page 7 


  229 00000140 D1C8            BNE              terminateBreath
  230 00000142         
  231 00000142 F000 F85E 
                       phase2B BL               delay
  232 00000146 F1B9 0901       SUBS             R9, #1
  233 0000014A D2FA            BHS              phase2B
  234 0000014C F000 F854       BL               turnOffLED
  235 00000150 E7E1            B                phase2
  236 00000152         
  237 00000152 2E5A    phase3  CMP              R6, #90
  238 00000154 D01B            BEQ              phase4
  239 00000156 F106 0614       ADD              R6, R6, #20
  240 0000015A 3F14            SUBS             R7, #20
  241 0000015C 46B1            MOV              R9, R6
  242 0000015E 46B8            MOV              R8, R7
  243 00000160 F000 F838       BL               checkPF4Input
  244 00000164 2D01            CMP              R5, #1
  245 00000166 D1B5            BNE              terminateBreath
  246 00000168         
  247 00000168 F000 F84B 
                       phase3A BL               delay
  248 0000016C F1B8 0801       SUBS             R8, #1
  249 00000170 D2FA            BHS              phase3A
  250 00000172 F000 F83C       BL               turnOnLED
  251 00000176 F000 F82D       BL               checkPF4Input
  252 0000017A 2D01            CMP              R5, #1
  253 0000017C D1AA            BNE              terminateBreath
  254 0000017E         
  255 0000017E F000 F840 
                       phase3B BL               delay
  256 00000182 F1B9 0901       SUBS             R9, #1
  257 00000186 D2FA            BHS              phase3B
  258 00000188 F000 F836       BL               turnOffLED
  259 0000018C E7E1            B                phase3
  260 0000018E         
  261 0000018E 2E0A    phase4  CMP              R6, #10
  262 00000190 D01B            BEQ              initBreathRestart ;branches to 
                                                            reinitialize RDC ON
                                                             and RDC OFF for Br
                                                            eathingLED restart 
                                                            if exit condition i
                                                            s met
  263 00000192 3E0A            SUBS             R6, #10
  264 00000194 F107 070A       ADD              R7, R7, #10
  265 00000198 46B1            MOV              R9, R6
  266 0000019A 46B8            MOV              R8, R7
  267 0000019C F000 F81A       BL               checkPF4Input
  268 000001A0 2D01            CMP              R5, #1
  269 000001A2 D197            BNE              terminateBreath
  270 000001A4         
  271 000001A4 F000 F82D 
                       phase4A BL               delay
  272 000001A8 F1B8 0801       SUBS             R8, #1
  273 000001AC D2FA            BHS              phase4A
  274 000001AE F000 F81E       BL               turnOnLED
  275 000001B2 F000 F80F       BL               checkPF4Input
  276 000001B6 2D01            CMP              R5, #1
  277 000001B8 D18C            BNE              terminateBreath
  278 000001BA         



ARM Macro Assembler    Page 8 


  279 000001BA F000 F822 
                       phase4B BL               delay
  280 000001BE F1B9 0901       SUBS             R9, #1
  281 000001C2 D2FA            BHS              phase4B
  282 000001C4 F000 F818       BL               turnOffLED
  283 000001C8 E7E1            B                phase4
  284 000001CA         
  285 000001CA F04F 0600 
                       initBreathRestart
                               MOV              R6, #0
  286 000001CE F04F 0764       MOV              R7, #100
  287 000001D2 E782            B                phase1      ;restart location
  288 000001D4         
  289 000001D4         
  290 000001D4         ********************************************************
************************************************************
  291 000001D4         ;This subroutine turns on the LED
  292 000001D4 4813    checkPF4Input
                               LDR              R0, =GPIO_PORTF_DATA_R
  293 000001D6 6801            LDR              R1, [R0]
  294 000001D8 F001 0110       AND              R1, #0x10   ; Isolate input PF4
                                                            
  295 000001DC 2900            CMP              R1, #0      ; If PF4 = 0 (negat
                                                            ive logic), make LE
                                                            D breathe
  296 000001DE D000            BEQ              continue
  297 000001E0 E002            B                terminate
  298 000001E2         
  299 000001E2 F04F 0501 
                       continue
                               MOV              R5, #1
  300 000001E6 4770            BX               LR
  301 000001E8         
  302 000001E8 F04F 0500 
                       terminate
                               MOV              R5, #0
  303 000001EC 4770            BX               LR
  304 000001EE         
  305 000001EE         
  306 000001EE         ********************************************************
************************************************************
  307 000001EE         ;This subroutine turns on the LED
  308 000001EE 480E    turnOnLED
                               LDR              R0, =GPIO_PORTE_DATA_R
  309 000001F0 F04F 0104       MOV              R1, #0x4
  310 000001F4 6001            STR              R1, [R0]
  311 000001F6 4770            BX               LR
  312 000001F8         ********************************************************
************************************************************
  313 000001F8         ; This subroutine turns off the LED
  314 000001F8 480B    turnOffLED
                               LDR              R0, =GPIO_PORTE_DATA_R
  315 000001FA F04F 0100       MOV              R1, #0x0
  316 000001FE 6001            STR              R1, [R0]
  317 00000200 4770            BX               LR
  318 00000202         ********************************************************
************************************************************
  319 00000202         ; This subroutine delays 0.5 ms
  320 00000202 F242 7010 



ARM Macro Assembler    Page 9 


                       delay   LDR              R0, =10000
  321 00000206 3801    wait    SUBS             R0, #1
  322 00000208 D1FD            BNE              wait
  323 0000020A 4770            BX               LR
  324 0000020C         ********************************************************
************************************************************
  325 0000020C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  326 0000020C                 END                          ; end of file
              400FE608 
              40024400 
              40025400 
              4002451C 
              4002551C 
              40025510 
              400253FC 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -I"C:\Users\Ngoc Dao\AppData\Loc
al\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include" -I"C:\Users\Ngoc Dao\AppData\L
ocal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123" --predefine="__EVAL 
SETA 1" --predefine="__UVISION_VERSION SETA 533" --predefine="_RTE_ SETA 1" --p
redefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\main.lst mai
n.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: .text unused
BreathingLED 000000C6

Symbol: BreathingLED
   Definitions
      At line 179 in file main.s
   Uses
      At line 154 in file main.s
Comment: BreathingLED used once
Pressed 0000007C

Symbol: Pressed
   Definitions
      At line 130 in file main.s
   Uses
      At line 161 in file main.s
Comment: Pressed used once
Start 00000000

Symbol: Start
   Definitions
      At line 55 in file main.s
   Uses
      At line 53 in file main.s
Comment: Start used once
checkInput 000000A2

Symbol: checkInput
   Definitions
      At line 149 in file main.s
   Uses
      At line 113 in file main.s
      At line 120 in file main.s
      At line 131 in file main.s

checkPF4Input 000001D4

Symbol: checkPF4Input
   Definitions
      At line 292 in file main.s
   Uses
      At line 195 in file main.s
      At line 203 in file main.s
      At line 219 in file main.s
      At line 227 in file main.s
      At line 243 in file main.s
      At line 251 in file main.s
      At line 267 in file main.s
      At line 275 in file main.s

continue 000001E2




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: continue
   Definitions
      At line 299 in file main.s
   Uses
      At line 296 in file main.s
Comment: continue used once
delay 00000202

Symbol: delay
   Definitions
      At line 320 in file main.s
   Uses
      At line 114 in file main.s
      At line 121 in file main.s
      At line 199 in file main.s
      At line 207 in file main.s
      At line 223 in file main.s
      At line 231 in file main.s
      At line 247 in file main.s
      At line 255 in file main.s
      At line 271 in file main.s
      At line 279 in file main.s

initBreathRestart 000001CA

Symbol: initBreathRestart
   Definitions
      At line 285 in file main.s
   Uses
      At line 262 in file main.s
Comment: initBreathRestart used once
loop 00000056

Symbol: loop
   Definitions
      At line 111 in file main.s
   Uses
      At line 126 in file main.s
      At line 142 in file main.s
      At line 145 in file main.s

loop1 00000058

Symbol: loop1
   Definitions
      At line 113 in file main.s
   Uses
      At line 116 in file main.s
Comment: loop1 used once
loop2 0000006A

Symbol: loop2
   Definitions
      At line 120 in file main.s
   Uses
      At line 123 in file main.s
Comment: loop2 used once
modDutyCycle 0000008A




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: modDutyCycle
   Definitions
      At line 137 in file main.s
   Uses
      At line 134 in file main.s
Comment: modDutyCycle used once
phase1 000000DA

Symbol: phase1
   Definitions
      At line 189 in file main.s
   Uses
      At line 184 in file main.s
      At line 211 in file main.s
      At line 287 in file main.s

phase1A 000000F0

Symbol: phase1A
   Definitions
      At line 199 in file main.s
   Uses
      At line 201 in file main.s
Comment: phase1A used once
phase1B 00000106

Symbol: phase1B
   Definitions
      At line 207 in file main.s
   Uses
      At line 209 in file main.s
Comment: phase1B used once
phase2 00000116

Symbol: phase2
   Definitions
      At line 213 in file main.s
   Uses
      At line 190 in file main.s
      At line 235 in file main.s

phase2A 0000012C

Symbol: phase2A
   Definitions
      At line 223 in file main.s
   Uses
      At line 225 in file main.s
Comment: phase2A used once
phase2B 00000142

Symbol: phase2B
   Definitions
      At line 231 in file main.s
   Uses
      At line 233 in file main.s
Comment: phase2B used once
phase3 00000152




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: phase3
   Definitions
      At line 237 in file main.s
   Uses
      At line 214 in file main.s
      At line 259 in file main.s

phase3A 00000168

Symbol: phase3A
   Definitions
      At line 247 in file main.s
   Uses
      At line 249 in file main.s
Comment: phase3A used once
phase3B 0000017E

Symbol: phase3B
   Definitions
      At line 255 in file main.s
   Uses
      At line 257 in file main.s
Comment: phase3B used once
phase4 0000018E

Symbol: phase4
   Definitions
      At line 261 in file main.s
   Uses
      At line 238 in file main.s
      At line 283 in file main.s

phase4A 000001A4

Symbol: phase4A
   Definitions
      At line 271 in file main.s
   Uses
      At line 273 in file main.s
Comment: phase4A used once
phase4B 000001BA

Symbol: phase4B
   Definitions
      At line 279 in file main.s
   Uses
      At line 281 in file main.s
Comment: phase4B used once
terminate 000001E8

Symbol: terminate
   Definitions
      At line 302 in file main.s
   Uses
      At line 297 in file main.s
Comment: terminate used once
terminateBreath 000000D4

Symbol: terminateBreath



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 186 in file main.s
   Uses
      At line 197 in file main.s
      At line 205 in file main.s
      At line 221 in file main.s
      At line 229 in file main.s
      At line 245 in file main.s
      At line 253 in file main.s
      At line 269 in file main.s
      At line 277 in file main.s

turnOffLED 000001F8

Symbol: turnOffLED
   Definitions
      At line 314 in file main.s
   Uses
      At line 124 in file main.s
      At line 210 in file main.s
      At line 234 in file main.s
      At line 258 in file main.s
      At line 282 in file main.s

turnOnLED 000001EE

Symbol: turnOnLED
   Definitions
      At line 308 in file main.s
   Uses
      At line 117 in file main.s
      At line 202 in file main.s
      At line 226 in file main.s
      At line 250 in file main.s
      At line 274 in file main.s

wait 00000206

Symbol: wait
   Definitions
      At line 321 in file main.s
   Uses
      At line 322 in file main.s
Comment: wait used once
wait2 00000080

Symbol: wait2
   Definitions
      At line 131 in file main.s
   Uses
      At line 133 in file main.s
Comment: wait2 used once
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 157 in file main.s
      At line 308 in file main.s
      At line 314 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: GPIO_PORTF_CR_R unused
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 149 in file main.s
      At line 292 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 79 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: GPIO_PORTF_LOCK_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 63 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 57 in file main.s
Comment: TExaS_Init used once
1 symbol
382 symbols in table
